class Solution
{
    public:
    //Function to serialize a tree and return a list containing nodes of tree.
   void solve(Node*root, vector<int>& ans) {
        if(root==NULL) {
            ans.push_back(-1);
            return;
        }
        ans.push_back(root->data);
        solve(root->left,ans);
        solve(root->right,ans);
    }
    vector<int> serialize(Node *root) 
    {
        vector<int>ans;
        solve(root,ans);
        return ans;
    }
    
    //Function to deserialize a list and construct the tree.
    int ind=0;
    Node * deSerialize(vector<int> &A)
    {
       if(ind==A.size()){
           return NULL;
       }
       int val = A[ind++];
       if(val==-1) {
           return NULL;
       }
       Node* root = new Node(val);
       root->left = deSerialize(A);
       root->right = deSerialize(A);
       return root;
    }

};
