class Solution {
public:
int ans =0;
    int dfs(vector<int>adj[],int num,int parent){
        if(adj[num].size()==0){
            return 1; 
        }
        int count = 0;
        for(auto x : adj[num]){
            if(parent!=x)
            count = count + dfs(adj,x,num);
        }
        if((count+1)%2 == 0){
            ans++;
        }
        return count+1;
    }
	int minimumEdgeRemove(int n, vector<vector<int>>edges){
	       vector<int>adj[n+1];
        for(auto x:edges){
           int u = x[0];
           int v = x[1];
           adj[v].push_back(u);
           adj[u].push_back(v);
        }
        dfs(adj,1,-1);
      
        return ans == 0 ? ans: ans-1;
	}
};
